syntax = "proto3";

package mychain.mymodule;

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "mychain/mymodule/params.proto";
import "mychain/mymodule/entity.proto";

option go_package = "mychain/x/mymodule/types";

// Query defines the gRPC querier service.
service Query {
  
  // Parameters queries the parameters of the module.
  rpc Params (QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/mychain/mymodule/params";
  
  }
  
  // Queries a list of Entity items.
  rpc Entity    (QueryGetEntityRequest) returns (QueryGetEntityResponse) {
    option (google.api.http).get = "/mychain/mymodule/entity/{id}";
  
  }
  rpc EntityAll (QueryAllEntityRequest) returns (QueryAllEntityResponse) {
    option (google.api.http).get = "/mychain/mymodule/entity";
  
  }
}
// QueryParamsRequest is request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is response type for the Query/Params RPC method.
message QueryParamsResponse {
  
  // params holds all the parameters of this module.
  Params params = 1 [(gogoproto.nullable) = false];
}

message QueryGetEntityRequest {
  uint64 id = 1;
}

message QueryGetEntityResponse {
  Entity Entity = 1 [(gogoproto.nullable) = false];
}

message QueryAllEntityRequest {
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllEntityResponse {
  repeated Entity                                 Entity     = 1 [(gogoproto.nullable) = false];
           cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

